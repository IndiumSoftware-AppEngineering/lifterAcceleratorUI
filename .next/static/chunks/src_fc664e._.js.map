{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/OneDrive%20-%20Indium%20Software%20India%20Private%20Limited/lifterUI/lifterAcceleratorUI/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://D%3A/OneDrive%20-%20Indium%20Software%20India%20Private%20Limited/lifterUI/lifterAcceleratorUI/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n  backgroundColor?: string; \r\n  color?: string; \r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  (\r\n    { className, variant, size, asChild = false, backgroundColor, color, ...props },\r\n    ref\r\n  ) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        style={{ backgroundColor, color }} \r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAWF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CACE,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,OAAO,EAC/E;IAEA,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,OAAO;YAAE;YAAiB;QAAM;QAChC,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://D%3A/OneDrive%20-%20Indium%20Software%20India%20Private%20Limited/lifterUI/lifterAcceleratorUI/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Globe,\r\n  Github,\r\n  Ellipsis,\r\n  MoveRight,\r\n  EllipsisVertical,\r\n  MoveLeft,\r\n  CheckCircle,\r\n} from \"lucide-react\";\r\n\r\ninterface ArtifactOption {\r\n  id: string;\r\n  Icon: React.ElementType;\r\n  label: string;\r\n  dropdownOptions?: string[];\r\n}\r\n\r\ninterface DropdownOption {\r\n  id: string;\r\n  label: string;\r\n  fields: string[]; // Fields to render based on the selected option\r\n}\r\n\r\nexport function DrawerContent() {\r\n  const [status, setStatus] = useState<\"Active\" | \"Inactive\">(\"Active\");\r\n  const [selectedIcon, setSelectedIcon] = useState<string | null>(null);\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n\r\n  const toggleStatus = () => {\r\n    setStatus((prev) => (prev === \"Active\" ? \"Inactive\" : \"Active\"));\r\n  };\r\n\r\n  const artifactOptions: ArtifactOption[] = [\r\n    {\r\n      id: \"github\",\r\n      Icon: Github,\r\n      label: \"GitHub\",\r\n      dropdownOptions: [\r\n        \"Git Public Repo - Https\",\r\n        \"Git with Https and PAT\",\r\n        \"Git with SSH and PAT\",\r\n        \"Git with SSH and Public Key\",\r\n        \"Git Repo as Zip\",\r\n      ],\r\n    },\r\n    { id: \"globe\", Icon: Globe, label: \"Globe\" },\r\n    { id: \"ellipsis\", Icon: Ellipsis, label: \"More Options\" },\r\n  ];\r\n\r\n  const dropdownOptions: DropdownOption[] = [\r\n    { id: \"git_https\", label: \"Git Public Repo - Https\", fields: [\"Git URL\", \"Branch URL\"] },\r\n    { id: \"git_https_pat\", label: \"Git with Https and PAT\", fields: [\"Git URL\", \"Branch URL\", \"PAT\"] },\r\n    { id: \"git_ssh_pat\", label: \"Git with SSH and PAT\", fields: [\"Git URL\", \"Branch URL\", \"SSH\", \"PAT\"] },\r\n    { id: \"git_ssh_key\", label: \"Git with SSH and Public Key\", fields: [\"Git URL\", \"Branch URL\", \"SSH\", \"Public Key\"] },\r\n    { id: \"git_zip\", label: \"Git Repo as Zip\", fields: [\"Git URL\", \"Branch URL\"] },\r\n  ];\r\n\r\n  const handleIconClick = (id: string) => {\r\n    setSelectedIcon(id);\r\n    setDropdownVisible(id === \"github\");\r\n    setSelectedOption(null); // Reset selected option when GitHub icon is clicked\r\n  };\r\n\r\n  const handleOptionSelect = (id: string) => {\r\n    setSelectedOption(id);\r\n    setDropdownVisible(false);\r\n  };\r\n\r\n  const handlePrePopulatedFieldClick = () => {\r\n    setDropdownVisible(true);\r\n  };\r\n\r\n  const getSelectedOptionLabel = () => {\r\n    return dropdownOptions.find((option) => option.id === selectedOption)?.label || \"Choose an Option\";\r\n  };\r\n\r\n  const renderFields = () => {\r\n    const fields = dropdownOptions.find((option) => option.id === selectedOption)?.fields || [];\r\n    return fields.map((field) => (\r\n      <input\r\n        key={field}\r\n        type=\"text\"\r\n        placeholder={field}\r\n        className=\"p-2 border rounded text-sm\"\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-2 max-w-md mx-auto bg-white rounded-lg shadow-md overflow-hidden\" style={{ maxHeight: \"100vh\", overflowY: \"auto\" }}>\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        <h2 className=\"text-base font-semibold\">Create New Project</h2>\r\n        <Button variant=\"ghost\" size=\"icon\" className=\"text-gray-700\">\r\n          <MoveRight className=\"w-5 h-5\" />\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Status Toggle */}\r\n      <div className=\"flex justify-between items-center mb-3\">\r\n        <div\r\n          className={`px-2 py-1 rounded text-xs cursor-pointer shadow-sm transition-all w-24 text-center ${\r\n            status === \"Active\"\r\n              ? \"bg-[#C1FFC3] text-[#0C7603]\"\r\n              : \"bg-[#FFD4B7] text-[#BA6107]\"\r\n          }`}\r\n          onClick={toggleStatus}\r\n        >\r\n          {status} <span className=\"ml-1\">â–¼</span>\r\n        </div>\r\n        <Button variant=\"ghost\" size=\"icon\" className=\"text-gray-700\">\r\n          <EllipsisVertical className=\"w-4 h-4 text-gray-600 cursor-pointer\" />\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Project Details */}\r\n      <div className=\"mb-2\">\r\n        <div className=\"flex items-center gap-1\">\r\n          <Button variant=\"ghost\" size=\"icon\" className=\"text-gray-700\">\r\n            <MoveLeft className=\"w-4 h-4 text-gray-600 cursor-pointer\" />\r\n          </Button>\r\n          <h3 className=\"text-sm font-semibold text-gray-700\">Project Details</h3>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Choose Artifact */}\r\n      <div className=\"mb-3\">\r\n        <h4 className=\"text-sm font-bold mb-2 text-gray-700\">Choose Artifact</h4>\r\n        <div className=\"flex justify-center gap-4\">\r\n          {artifactOptions.map(({ id, Icon }) => (\r\n            <div\r\n              key={id}\r\n              className={`w-12 h-12 flex justify-center items-center border rounded-lg cursor-pointer shadow-sm transition-all ${\r\n                selectedIcon === id\r\n                  ? \"bg-indigo-100 text-indigo-600 scale-105 shadow-md\"\r\n                  : \"hover:bg-gray-100 hover:shadow-sm\"\r\n              }`}\r\n              onClick={() => handleIconClick(id)}\r\n            >\r\n              <Icon className=\"w-6 h-6\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Selected Option Display */}\r\n      {selectedIcon === \"github\" && (\r\n        <div className=\"mb-3\">\r\n          <h4 className=\"text-sm font-bold mb-2 text-gray-700\">\r\n            {getSelectedOptionLabel()}\r\n          </h4>\r\n        </div>\r\n      )}\r\n\r\n      {/* Render Fields Based on Selected Option */}\r\n      {selectedOption && (\r\n        <div className=\"mt-2\">\r\n          <div className=\"flex flex-col gap-2\">\r\n            {/* Pre-populated Selected Option Field */}\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={getSelectedOptionLabel()}\r\n                readOnly\r\n                className=\"p-2 border rounded text-sm bg-gray-100 cursor-pointer\"\r\n                onClick={handlePrePopulatedFieldClick}\r\n              />\r\n              {/* Dropdown for Selecting Options */}\r\n              {dropdownVisible && (\r\n                <div className=\"absolute z-10 mt-1 w-full bg-white border rounded shadow-sm\">\r\n                  <ul className=\"space-y-1\">\r\n                    {dropdownOptions.map((option) => (\r\n                      <li\r\n                        key={option.id}\r\n                        onClick={() => handleOptionSelect(option.id)}\r\n                        className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-all text-sm ${\r\n                          selectedOption === option.id\r\n                            ? \"bg-indigo-50 text-indigo-700 font-medium\"\r\n                            : \"hover:bg-gray-100\"\r\n                        }`}\r\n                      >\r\n                        <CheckCircle\r\n                          className={`w-4 h-4 ${\r\n                            selectedOption === option.id ? \"text-indigo-600\" : \"text-gray-300\"\r\n                          }`}\r\n                        />\r\n                        <span>{option.label}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {renderFields()}\r\n            <Button variant=\"default\" className=\"mt-2\">\r\n              Get Repo\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}